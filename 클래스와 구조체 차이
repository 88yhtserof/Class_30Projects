//16. 클래스와 구조체 차이
/*
 공통점
 값을 저장할 프로퍼티를 선언할 수 있다.
 함수적 기능을 하는 메서드를 선언할 수 있다.
 내부 값에 .을 사용하여 접근할 수 있다.
 생성자를 사용해 초기 상태를 설정할 수 있습니다.
 extension을 사용해 기능을 확장할 수 있다.
 Protocol을 채택하여 기능을 설정할 수 있다.
 
 차이점
 클래스
 중요 참조타입 -> 메모리 스택 영역에는 포인터, 즉 하나의 인스턴스 주소만 할당되고 실제 데이터는 힙 영역에 할당된다.
 ARC로 메모리를 관리한다. <- 실제 데이터는 힙 영역에 할당되기 때문에,
 상속이 가능하다.
 타입 캐스팅을 통해 런타임에서 클래스 인스턴스의 타입을 확인할 수 있다.
 deinit을 사용하여 클래스 인스턴스의 메모리 할당을 해제할 수 있다.
 같은 클래스 인스턴스를 여러 개의 변수에 할당한 뒤 값을 변경 시키면 모든 변수에 영향을 준다.(메모리가 복사됨)
 
 구조체
 중요 값 타입
 구조체 변수를 새로운 변수에 할당할 때마다 새로운 구조체가 할당된다. -> 값 타입이므로 할당할 때마다 새 copy 버전이 생긴다.
 즉 같은 구조체를 여러 개의 변수에 할당한 뒤 값을 변경시키더라도 다른 변수에 영향을 주지 않음(값 자체를 복사)
 */

//값 타입과 참조 타입의 차이
class SomeClass {
    var count: Int = 0
}

struct SomeStruct {
    var count: Int = 0
}

//같은 클래스 인스턴스를 여러 개의 변수에 할당한 뒤 값을 변경 시키면 모든 변수에 영향을 준다.(메모리가 복사됨) 확인
var class1 = SomeClass()
var class2 = class1
var class3 = class1

class3.count = 2
class1.count


//즉 같은 구조체를 여러 개의 변수에 할당한 뒤 값을 변경시키더라도 다른 변수에 영향을 주지 않음(값 자체를 복사) 확인
var struct1 = SomeStruct()
var struct2 = struct1

struct2.count = 3
struct2.count
struct1.count
